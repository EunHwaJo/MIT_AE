panel.xyplot(x,y);
panel.abline(lm(y~x));
}
xyplot(mpg ~ wt | trans, panel = plot.regression,data=mtcars)
fit<-lm(gpm~disp+hp+wt,data=mtcars)
summary(fit)
fit<-lm(gpm~disp+hp+wt-1,data=mtcars)
summary(fit)
fit<-lm(gpm~wt+disp+hp-1,data=mtcars)
summary(fit)
fit<-lm(gpm~wt+disp+hp+qsec+facyor(cyl)+factor(am))
fit<-lm(mpg~wt+disp+hp+qsec+facyor(cyl)+factor(am))
fit<-lm(gpm~wt+disp+hp+qsec+facyor(cyl)+factor(am),data=mtcars)
fit<-lm(gpm~wt+disp+hp+qsec+factor(cyl)+factor(am),data=mtcars)
fit<-lm(gpm~wt+disp+hp+qsec+factor(cyl)+factor(trans),data=mtcars)
summary(fit)
fit<-lm(gpm~wt+disp+hp+qsec+factor(cyl)+factor(trans)-1,data=mtcars)
summary(fit)
fit<-lm(gpm~factor(trans)+wt,data=mtcars)
summary(fit)
fit<-lm(gpm~factor(trans)+wt-1,data=mtcars)
summary(fit)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt))-1,data=mtcars)
summary(fit)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt)),data=mtcars)
summary(fit)
ggplot(data=mtcars,aes(x=wt-mean(wt),y=gpm,colour=trans))
ggplot(data=mtcars,aes(x=wt-mean(wt),y=gpm,colour=trans))+geom_point()
ggplot(data=mtcars,aes(x=wt-mean(wt),y=gpm,colour=trans))+geom_point()+gm_smooth(method=lm)
ggplot(data=mtcars,aes(x=wt-mean(wt),y=gpm,colour=trans))+geom_point()+geom_smooth(method=lm)
fit<-lm(gpm~factor(trans)+wt,data=mtcars)
summary(fit)
fit<-lm(gpm~factor(trans)+wt+factor(cyl),data=mtcars)
summary(fit)
fit<-lm(mpg~factor(trans)+wt,data=mtcars)
summary(fit)
fit<-lm(mpg~factor(trans)+wt-mean(wt),data=mtcars)
fit<-lm(mpg~factor(trans)+I(wt-mean(wt)),data=mtcars)
summary(fit)
fit<-lm(mpg~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec)),data=mtcars)
summary(fit)
fit<-lm(mpg~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec))-1,data=mtcars)
summary(fit)
fit$confint
confint(fit)
fit<-lm(mpg~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec))+I(hp-mean(hp))-1,data=mtcars)
summary(fit)
confint(fit)
mean(wt)
mean(mtcars$wt)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec))-1,data=mtcars)
summary(fit)
confint(fit)
resid(fit)
plot(resid(fit))
qqplot(resid(fit))
help(resid)
?resid
plot(fit)
par(2,2)
par(mfrow=c(2,2))
plot(m)
plot(fit)
confint(fit)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec)),data=mtcars)
confint(fit)
plot(fit)
plot(fit)
mfrow=c(2,2)
plot(fit)
par(mfrow=c(2,2))
plot(fit)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt)),data=mtcars)
plot(fit)
summary(fit)
qqplot
?qqplot
auto<-subset(mtcars(trans=="auto"))
auto<-subset(mtcars[trans=="auto"])
str(mtcars)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt)),data=mtcars,var=TRUE)
?lm
m<-mtcars[trans=="manual",]
m<-mtcars[mtcars$trans=="manual",]
a<-mtcars[mtcars$trans=="auto",]
qqplot(m$gpm,a$gpm)
qqlm<-lm(m$gpm~a$gpm)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt)),data=mtcars)
confint(fit)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt))-1,data=mtcars)
confint(fit)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec))-1,data=mtcars)
summary(fit)
confint(fit)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec)),data=mtcars)
summary(fit)
confint(fit)
fit<-lm(gpm~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec)),data=mtcars)
pairs(mtcars[,-c(1,2,8,9,10,11)])
fit<-lm(gpm~factor(trans)+I(wt-mean(wt))+I(qsec-mean(qsec))+I(disp-mean(disp))+I(hp-mean(hp)),data=mtcars)
confint(fit)
summary(fit)
?mtcars
pairs(mtcars)
pairs(mtcars[,-c(1,8,9,10,11)])
fit<-lm(gpm~factor(cyl)+factor(trans)+wt+disp+hp+qsec+drat)
fit<-lm(gpm~factor(cyl)+factor(trans)+wt+disp+hp+qsec+drat,data=mtcars)
confint(fit)
summary(fit)
fit<-lm(gpm~factor(trans)+wt,data=mtcars)
summary(fit)
fit<-lm(gpm~factor(trans)+wt-1,data=mtcars)
summary(fit)
confint(fit)
library(dplyr)
library(ggplot2)
data(mtcars)
str(mtcars)
#make  am a factor column
for (i in c(2,8,9,10,11)){mtcars[,i]=factor(mtcars[,i])}
mtcars$gpm<-100/mtcars$mpg
str(mtcars)
pairs(mtcars[,-c(1,2,8,9,10,11,12)])
```{r gpm plot}
library(ggplot2)
mtcars$gpm<-100/mtcars$mpg
g<-ggplot(data=mtcars,aes(x=wt,y=gpm,colour=am))+
geom_point()+
geom_smooth(method=lm)+
#facet_wrap(~amf,shrink=FALSE)+
labs(x = "Weight / 1000 lb",y = "Gallons per 100 miles")
g
pairs(mtcars[,-c(1,2,8,9,10,11,12)])
pairs(mtcars[,-c(1,2,8,9,10,11)])
?mtcars
fit<-lm(mpg~factor(am)+wt+disp+qsec+hp)
summary(fit)
confint(fit)
fit<-lm(mpg~factor(am)+wt+disp+qsec+hp,data=mtcars)
summary(fit)
confint(fit)
fit<-lm(gpm~factor(am)+wt+disp+qsec+hp,data=mtcars)
summary(fit)
confint(fit)
library(dplyr)
library(ggplot2)
data(mtcars)
str(mtcars)
for (i in c(2,8,9,10,11)){mtcars[,i]=factor(mtcars[,i])}
mtcars$gpm<-100/mtcars$mpg
pairs(mtcars[,-c(1,2,8,9,10,11)])
for (i in c(2,5,8,9,10,11)){mtcars[,i]=factor(mtcars[,i])}
mtcars$gpm<-100/mtcars$mpg
library(dplyr)
library(ggplot2)
data(mtcars)
str(mtcars)
for (i in c(2,8,9,10,11)){mtcars[,i]=factor(mtcars[,i])}
mtcars$gpm<-100/mtcars$mpg
pairs(mtcars[,-c(1,2,8,9,10,11)])
pairs(mtcars[,-c(1,2,5,8,9,10,11)])
fit<-lm(gpm~factor(am)+wt+disp+qsec+hp-1,data=mtcars)
summary(fit)
confint(fit)
fit<-lm(gpm~factor(am)+wt-1,data=mtcars)
summary(fit
confint(fit))
fit<-lm(gpm~factor(am)+wt-1,data=mtcars)
summary(fit
confint(fit)
fit<-lm(gpm~factor(am)+wt-1,data=mtcars)
summary(fit)
confint(fit)
fit<-lm(gpm~factor(am)+wt,data=mtcars)
summary(fit)
confint(fit)
pairs(mtcars, panel=panel.smooth, main="mtcars data")
pairs(mtcars[,-c(1,2,5,8,9,10,11)])
fit<-lm(gpm~factor(am)+wt,data=mtcars)
summary(fit)
confint(fit)
plot(fit)
plot(fit)[1,]
str(plot(fit))
class(plot(fit))
plot(fit)
a<-plot(fit)
class(a)
a[[1]]
a[1]
qqplot(fit)
qqplot(mtcars$weight,mtcars$gpm)
?qqplot
qqplot(mtcars$wt,mtcars$gpm)
plot(fit)
qqplot(mtcars$wt,mtcars$gpm)
plot(mtcars$wt,mtcars$gpm)
resid(fit)
plot(resid(fit))
qqplot(fit)
fit<-lm(gpm~factor(am)+wt,data=mtcars)
summary(fit)
confint(fit)
plot(fit)
plot(fit)
par(mfrow=c(2,2))
plot(fit)
library(MASS)
?MASS
?shuttle
head(shuttle)
summary(shuttle)
library(MASS)
fit<-glm(use~wind,data=shuttle)
fit
library(MASS)
fit<-glm(formula=use~wind,family="binomial",data=shuttle)
fit
library(MASS)
fit<-glm(formula=use~wind,family="binomial",data=shuttle)
summary(fit)
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family="binomial",data=shuttle)
summary(fit)
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family="binomial",data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
fit<-glm(formula=use~wind+magn,family="binomial",data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
fit<-glm(formula=use~wind+magn,family="binomial",data=shuttle)
summary(fit)
exp(-0.03201)
exp(fit$coef[2])
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family="binomial",data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
m <- polr(use ~ wind,data = shuttle, Hess=TRUE)
summary(m)
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family=binomial,data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
summary(m)
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family=binomial,data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family=binomial(logit),data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
fit<-glm(formula=use~wind*magn,family="binomial",data=shuttle)
summary(fit)
exp(-0.03201)
exp(fit$coef[2])
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family=binomial("logit"),data=shuttle)
summary(fit)
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family=binomial("logit"),data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind-1,family=binomial("logit"),data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
library(MASS)
str(shuttle)
fit<-glm(formula=use~wind,family=binomial("logit"),data=shuttle)
summary(fit)
exp(-0.03181)
exp(fit$coef[2])
library(MASS)
str(shuttle)
shuttle$auto <- as.numeric(shuttle$use=="auto")
fit <- glm(auto ~ wind,  binomial,  shuttle)
fit3 <- glm(1-auto ~ wind,  binomial, shuttle)
fit$coefficients
fit3$coefficients
library(MASS)
str(shuttle)
shuttle$auto <- as.numeric(shuttle$use=="auto")
fit <- glm(auto ~ wind,  binomial,  shuttle)
plot(shuttle$auto,shuttle$wind)
library(MASS)
str(shuttle)
shuttle$auto <- as.numeric(shuttle$use=="auto")
fit <- glm(auto ~ wind,  binomial,  shuttle)
hist(shuttle$auto,shuttle$wind)
library(MASS)
str(shuttle)
shuttle$auto <- as.numeric(shuttle$use=="auto")
fit <- glm(auto ~ wind,  binomial,  shuttle)
table(shuttle$auto,shuttle$wind)
materials<-c("Concrete","Straw bale", "Rammed earth", " Granite")
tc<-c(1.13,0.055,0.6,3.49)
density<-c(2300,120,2000,2880)
cp<-c(840,2000,837,840)
thermal.df<-data.frame(materials,tc,density,cp)
thermal.df
thermal.df$diff=thermal.df$tc/(thermal.df$density*thermal.df$cp)
thermal.df
setwd("H:/Rspace/MIT_AE/Unit6")
## THE ANALYTICS EDGE 15.071x
## UNIT 6 A1
## Michael Hunt
## July 2015
# load data into R
dailykos<-read.csv("./data/dailykos.csv")
str(dailykos)
## Hierarchical clustering
# compute distances
distances = dist(dailykos, method = "euclidean")
# Hierarchical clustering
HierclusterKos = hclust(distances, method = "ward.D")
# Plot the dendrogram
plot(HierclusterKos)
# from Dendrogram, and from considration of what we want to do, 7 clusters seems a good idea.
# from Dendrogram alone, might ave gone for 2 or 3 clusters , but this would be too few to be
# useful.
# Assign points to clusters
Hierkosclusters = cutree(HierclusterKos, k = 7)
# create a data set for each cluster
table(Hierkosclusters)
Hierkos1<-subset(dailykos,Hierkosclusters==1)
Hierkos2<-subset(dailykos,Hierkosclusters==2)
Hierkos3<-subset(dailykos,Hierkosclusters==3)
Hierkos4<-subset(dailykos,Hierkosclusters==4)
Hierkos5<-subset(dailykos,Hierkosclusters==5)
Hierkos6<-subset(dailykos,Hierkosclusters==6)
Hierkos7<-subset(dailykos,Hierkosclusters==7)
nrow(Hierkos3) # should agreee with number itable check just above = 374
# could also do this using split function:
HierkosCluster = split(dailykos, Hierkosclusters)
Hierkos1<-HierkosCluster[[1]]
nrow(Hierkos1)
# etc...
# pick the six most frequently occurring words in each cluster
tail(sort(colMeans(kos1)))
tail(sort(colMeans(kos2)))
tail(sort(colMeans(kos3)))
tail(sort(colMeans(kos4)))
tail(sort(colMeans(kos5)))
tail(sort(colMeans(kos6)))
tail(sort(colMeans(kos7)))
## k-means clustering
# Specify number of clusters
k = 7
# Run k-means
set.seed(1000)
KMC = kmeans(dailykos, centers = k)
str(KMC)
table(KMC$cluster)
# split data set into the 7 clusters this produces
# lets try to do it using the split function this time:
kkosCluster = split(dailykos, KMC$cluster)
kkos1<-kkosCluster[[1]]
kkos2<-kkosCluster[[2]]
kkos3<-kkosCluster[[3]]
kkos4<-kkosCluster[[4]]
kkos5<-kkosCluster[[5]]
kkos6<-kkosCluster[[6]]
kkos7<-kkosCluster[[7]]
# find six most frequent words in each cluster
tail(sort(colMeans(kkos1)))
tail(sort(colMeans(kkos2)))
tail(sort(colMeans(kkos3)))
tail(sort(colMeans(kkos4)))
tail(sort(colMeans(kkos5)))
tail(sort(colMeans(kkos6)))
tail(sort(colMeans(kkos7)))
# compare the the two clustering methods
table(Hierkosclusters,KMC$cluster) # gives Hier values in rows, k-means values in columns
# pick the six most frequently occurring words in each cluster
tail(sort(colMeans(Hierkos1)))
tail(sort(colMeans(Hierkos2)))
tail(sort(colMeans(Hierkos3)))
tail(sort(colMeans(Hierkos4)))
tail(sort(colMeans(Hierkos5)))
tail(sort(colMeans(Hierkos6)))
tail(sort(colMeans(Hierkos7)))
## k-means clustering
# Specify number of clusters
k = 7
# Run k-means
set.seed(1000)
KMC = kmeans(dailykos, centers = k)
str(KMC)
table(KMC$cluster)
# split data set into the 7 clusters this produces
# lets try to do it using the split function this time:
kkosCluster = split(dailykos, KMC$cluster)
kkos1<-kkosCluster[[1]]
kkos2<-kkosCluster[[2]]
kkos3<-kkosCluster[[3]]
kkos4<-kkosCluster[[4]]
kkos5<-kkosCluster[[5]]
kkos6<-kkosCluster[[6]]
kkos7<-kkosCluster[[7]]
# find six most frequent words in each cluster
tail(sort(colMeans(kkos1)))
tail(sort(colMeans(kkos2)))
tail(sort(colMeans(kkos3)))
tail(sort(colMeans(kkos4)))
tail(sort(colMeans(kkos5)))
tail(sort(colMeans(kkos6)))
tail(sort(colMeans(kkos7)))
# compare the the two clustering methods
table(Hierkosclusters,KMC$cluster) # gives Hier values in rows, k-means values in columns
airlines<-read.csv("./data/AirlinesCluster.csv")
str(airlines)
summary(airlines)
library(caret)
install.packages("caret")
library(caret)
?caret
preproc = preProcess(airlines)
airlinesNorm = predict(preproc, airlines)
summary(preproc)
summary(airlinesNorm)
summary(airlines)
?sd
sd(airlines$Balance)
# compute euclidean distances
distances = dist(airlinesNorm, method = "euclidean")
# Hierarchical clustering
HierClusterAir = hclust(distances, method = "ward.D")
plot(HierClusterAir)
HierAirClusters = cutree(HierClusterAir, k = 5)
HierAirClusterList = split(airlinesNorm, HierAirClusters)
HierAir1<-HierAirClusterList[[1]]
nrow(HierAir1)
nrow(HierAirClusters)
class(HierAirClusters)
str(HierAirClusters)
tapply(airlines, HierAirClusters, mean)
nrow(airlines)
tapply(airlines$Balance, HierAirClusters, mean)
mapply(airlines, HierAirClusters, mean)
apply(airlines, HierAirClusters, mean)
str(airlines)
tapply(airlines$Balance, HierAirClusters, mean)
tapply(airlines$QualMiles, HierAirClusters, mean)
tapply(airlines$BonusMiles, HierAirClusters, mean)
tapply(airlines$BonusTrans, HierAirClusters, mean)
tapply(airlines$FlightMiles, HierAirClusters, mean)
tapply(airlines$FlightTrans, HierAirClusters, mean)
tapply(airlines$DaysSinceEnroll, HierAirClusters, mean)
set.seed(88)
KMCAir = kmeans(airlinesNorm, centers = k,iter.max=1000)
str(KMCAir)
table(KMCAir$cluster)
table(HierAirClusters,KMCAir$cluster) # give
stocks<-read.csv("./data/StocksCluster.csv")
str(stocks)
summary(stocks)
mean(stocks$PositiveDec)
cor(stocks[,1:11])
round(cor(stocks[,1:11]),2)
round(cor(stocks[,1:11]),3)
max(cor(stocks[,1:11]))
max(cor(stocks[,1:11])-diag(cor(stocks[,1:11])))
cor(stocks[,1:11])-diag(cor(stocks[,1:11]))
diag(cor(stocks[,1:11])
)
max(cor(stocks[,1:11]),cor(stocks[,1:11])<1)
max(cor(stocks[,1:11]<1))
max(cor(stocks[,1:11])<1)
max(cor(stocks[,1:11]),cor(stocks[,1:11])<1)
round(cor(stocks[,1:11]),3)
str(cor(stocks[,1:11]))
cor(stocks[,1:11])-Diagonal(11)
?Diagonal
library(Matrix)
cor(stocks[,1:11])-Diagonal(11)
max(cor(stocks[,1:11])-Diagonal(cor(stocks[,1:11])))
cor(stocks[,1:11])-Diagonal(cor(stocks[,1:11]))
round(cor(stocks[,1:11]),3)
Diagonal(cor(stocks[,1:11]))
cor(stocks[,1:11])-Diagonal(11)
max(cor(stocks[,1:11])-Diagonal(11))
10*75+20*91.5+20*65+10*69+20*85.5+20*76+10*83+10*68
9310/120
marks<-c(75,91.5,65,69,85,5,76,83,68)
credits<-c(10,20,20,10,20,20,10,10)
marks*credits/120
average(marks*credits)
mean(marks*credits)
marks<-c(75,91.5,65,69,85.5,76,83,68)
mean(marks*credits)
sum(marks*credits)
sum(marks*credits)/120
