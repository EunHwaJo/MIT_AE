#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/MetroAreaCodes.csv"
download.file(fileURL,destfile="./data/MetroAreaCodes.csv")
#include date of download
}
MetroAreaMap<-read.csv("./data/MetroAreaCodes.csv",stringsAsFactors=FALSE)
if(!file.exists("./data/CountryCodes.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/CountryCodes.csv"
download.file(fileURL,destfile="./data/CountryCodes.csv")
#include date of download
}
CountryMap<-read.csv("./data/CountryCodes.csv")
#3.2
CPS <- merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
sum(is.na(CPS$MetroAreaCode))
#3.3
n.interviewee<-
CPS %>%
group_by(MetroArea) %>%
count(MetroArea) %>%
arrange(-n)
n.interviewee
#3.4
n.hispanic<-
CPS %>%
group_by(MetroArea) %>%
summarise(hisp=sum(Hispanic))
n.hispanic
n.hisp.int<-merge(n.interviewee,n.hispanic,by.x="MetroArea",all.x=TRUE)
n.hisp.int$hispfrac<-n.hisp.int$hisp/n.hisp.int$n
arrange(n.hisp.int,-hispfrac)[1,1]
#3.5
n.asian<-
CPS %>%
group_by(MetroArea) %>%
summarise(asians=sum(Race=="Asian"))
n.asian
n.asian.int<-merge(n.interviewee,n.asian,by.x="MetroArea",all.x=TRUE)
n.asian.int$asianfrac<-n.asian.int$asian/n.asian.int$n
topasians<-count(n.asian.int,asianfrac>=0.2)[2,2]
topasians
arrange(n.asian.int,-asianfrac)[1:5,]
#3.6
no_hs_dip<-sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean,na.rm=TRUE))
head(no_hs_dip)
#4.1
CPS <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
str(CPS)
summary(CPS)
CPS <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
count(is.na(CPS$Country))
count(is.na(as.character(CPS$Country)))
ungroup(CPS)
count(is.na(as.character(CPS$Country)))
CPS <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
CPS <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
summary(CPS)
str(CPS)
arrange(CPS,-Country.x)
arrange(-CPS$Country.x)
sort(-CPS$Country.x)
# Set working directory
setwd("C:/Users/Mike/Rspace/MIT_AE")
library(dplyr)
# Download data
if(!file.exists("data")){
dir.create("data")
}
# download data if not yet already done so
if(!file.exists("./data/CPS.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/CPSData.csv"
download.file(fileURL,destfile="./data/CPS.csv")
#include date of download
}
CPS<-read.csv("./data/CPS.csv",stringsAsFactors=FALSE)
#view the data
summary(CPS)
str(CPS)
#1.1
nrow(CPS)
#1.2
a1.2<-sort(table(CPS$Industry))
a1.2
which.max(a1.2)
#1.3
which.min(sort(table(CPS$State)))
which.max(sort(table(CPS$State)))
#1.4
cnus<-nrow(filter(CPS,Citizenship=="Non-Citizen"))/nrow(CPS)
1-cnus
#1.5
CPS %>% group_by(Race) %>% summarise(hisp=sum(Hispanic)) %>%filter(hisp>250)
#or
table(CPS$Race, CPS$Hispanic) # seems more straightforward
#2.1
sapply(CPS,function(x){sum(is.na(x))>0})
#2.2
table(CPS$Region, is.na(CPS$Married))
#2.3
nrow(table(CPS$State, mean(CPS$MetroAreaCode)==0))
#3.1
# download data if not yet already done so
if(!file.exists("./data/MetroAreaCodes.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/MetroAreaCodes.csv"
download.file(fileURL,destfile="./data/MetroAreaCodes.csv")
#include date of download
}
MetroAreaMap<-read.csv("./data/MetroAreaCodes.csv",stringsAsFactors=FALSE)
if(!file.exists("./data/CountryCodes.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/CountryCodes.csv"
download.file(fileURL,destfile="./data/CountryCodes.csv")
#include date of download
}
CountryMap<-read.csv("./data/CountryCodes.csv")
#3.2
CPS <- merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
sum(is.na(CPS$MetroAreaCode))
#3.3
n.interviewee<-
CPS %>%
group_by(MetroArea) %>%
count(MetroArea) %>%
arrange(-n)
n.interviewee
#3.4
n.hispanic<-
CPS %>%
group_by(MetroArea) %>%
summarise(hisp=sum(Hispanic))
n.hispanic
n.hisp.int<-merge(n.interviewee,n.hispanic,by.x="MetroArea",all.x=TRUE)
n.hisp.int$hispfrac<-n.hisp.int$hisp/n.hisp.int$n
arrange(n.hisp.int,-hispfrac)[1,1]
#3.5
n.asian<-
CPS %>%
group_by(MetroArea) %>%
summarise(asians=sum(Race=="Asian"))
n.asian
n.asian.int<-merge(n.interviewee,n.asian,by.x="MetroArea",all.x=TRUE)
n.asian.int$asianfrac<-n.asian.int$asian/n.asian.int$n
topasians<-count(n.asian.int,asianfrac>=0.2)[2,2]
topasians
arrange(n.asian.int,-asianfrac)[1:5,]
#3.6
no_hs_dip<-sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean,na.rm=TRUE))
head(no_hs_dip)
#4.1
CPS <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
summary(CPS)
str(CPS)
arrange(CPS,-Country)
head(CPS)
CPS <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
summary(CPS)
# Set working directory
setwd("C:/Users/Mike/Rspace/MIT_AE")
library(dplyr)
# Download data
if(!file.exists("data")){
dir.create("data")
}
# download data if not yet already done so
if(!file.exists("./data/CPS.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/CPSData.csv"
download.file(fileURL,destfile="./data/CPS.csv")
#include date of download
}
CPS<-read.csv("./data/CPS.csv",stringsAsFactors=FALSE)
#view the data
summary(CPS)
str(CPS)
#1.1
nrow(CPS)
#1.2
a1.2<-sort(table(CPS$Industry))
a1.2
which.max(a1.2)
#1.3
which.min(sort(table(CPS$State)))
which.max(sort(table(CPS$State)))
#1.4
cnus<-nrow(filter(CPS,Citizenship=="Non-Citizen"))/nrow(CPS)
1-cnus
#1.5
CPS %>% group_by(Race) %>% summarise(hisp=sum(Hispanic)) %>%filter(hisp>250)
#or
table(CPS$Race, CPS$Hispanic) # seems more straightforward
#2.1
sapply(CPS,function(x){sum(is.na(x))>0})
#2.2
table(CPS$Region, is.na(CPS$Married))
#2.3
nrow(table(CPS$State, mean(CPS$MetroAreaCode)==0))
#3.1
# download data if not yet already done so
if(!file.exists("./data/MetroAreaCodes.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/MetroAreaCodes.csv"
download.file(fileURL,destfile="./data/MetroAreaCodes.csv")
#include date of download
}
MetroAreaMap<-read.csv("./data/MetroAreaCodes.csv",stringsAsFactors=FALSE)
if(!file.exists("./data/CountryCodes.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/CountryCodes.csv"
download.file(fileURL,destfile="./data/CountryCodes.csv")
#include date of download
}
CountryMap<-read.csv("./data/CountryCodes.csv")
#3.2
CPS <- merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
sum(is.na(CPS$MetroAreaCode))
#3.3
n.interviewee<-
CPS %>%
group_by(MetroArea) %>%
count(MetroArea) %>%
arrange(-n)
n.interviewee
#3.4
n.hispanic<-
CPS %>%
group_by(MetroArea) %>%
summarise(hisp=sum(Hispanic))
n.hispanic
n.hisp.int<-merge(n.interviewee,n.hispanic,by.x="MetroArea",all.x=TRUE)
n.hisp.int$hispfrac<-n.hisp.int$hisp/n.hisp.int$n
arrange(n.hisp.int,-hispfrac)[1,1]
#3.5
n.asian<-
CPS %>%
group_by(MetroArea) %>%
summarise(asians=sum(Race=="Asian"))
n.asian
n.asian.int<-merge(n.interviewee,n.asian,by.x="MetroArea",all.x=TRUE)
n.asian.int$asianfrac<-n.asian.int$asian/n.asian.int$n
topasians<-count(n.asian.int,asianfrac>=0.2)[2,2]
topasians
arrange(n.asian.int,-asianfrac)[1:5,]
#3.6
no_hs_dip<-sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean,na.rm=TRUE))
head(no_hs_dip)
#4.1
CPSm <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
summary(CPS)
CPS <- merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
str(CPS)
n.cob<-CPS %>%
group_by(Country) %>%
count(Country) %>%
arrange(-n)
n.cob
str(CPS)
nnotUS<-CPS %>%
nnotUS<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA") %>%
count()
nnotUS<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA")
nnotUS
str(nnotUS)
nnotUS<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA") %>%
count(MetroArea)
nnotUS
nnotUS<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA") %>%
count(MetroArea)[1,2]
nnotUS
nnotUS[1,2]
narea<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA") %>%
count(MetroArea)
narea[1,2]
nnotUS<-narea<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA"
& CountryOfBirth !="United States") %>%
count(MetroArea)
nnotUS[1,2]
str(CPS)
narea<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA") %>%
count(MetroArea)
narea[1,2]
nnotUS<-narea<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA"
& Country !="United States") %>%
count(MetroArea)
nnotUS[1,2]
narea<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA") %>%
count(MetroArea)
narea[1,2]
nnotUS<-narea<-CPS %>%
filter(MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA"
& Country !="United States") %>%
count(MetroArea)
nnotUS[1,2]
nnotUS[1,2]/narea[1,2]
as.numeric(nnotUS[1,2]/narea[1,2])
as.numeric(nnotUS[1,2])/as.numeric(narea[1,2]))
as.numeric(nnotUS[1,2])/as.numeric(narea[1,2])
nindia<-CPS %>%
group_by(MetroArea) %>$
summarise(indians=sum(Country=="India")) %>%
arrange(-indians)
nindia
nindia<-CPS %>%
group_by(MetroArea) %>%
summarise(indians=sum(Country=="India")) %>%
arrange(-indians)
nindia
nbrazil<-CPS %>%
group_by(MetroArea) %>%
summarise(brazils=sum(Country=="Brazil")) %>%
arrange(-brazils)
nbrazil
nindia<-CPS %>%
group_by(MetroArea) %>%
summarise(indians=sum(Country=="India")) %>%
arrange(-indians)
nindia
nbrazil<-CPS %>%
group_by(MetroArea) %>%
summarise(brazils=sum(Country=="Brazil")) %>%
arrange(-brazils)
nbrazil
nsomalia<-CPS %>%
group_by(MetroArea) %>%
summarise(somalians=sum(Country=="Somalia")) %>%
arrange(-somalians)
nsomalia
nsomalia<-CPS %>%
group_by(MetroArea) %>%
summarise(somalians=sum(Country=="Somalia")) %>%
arrange(-somalians)
nsomalia [1:100,]
nsomalia [1:100,]
nsomalia<-CPS %>%
group_by(MetroArea) %>%
summarise(somalians=sum(Country=="Somalia")) %>%
arrange(somalians)
nsomalia [1:100,]
nindia<-CPS %>%
group_by(MetroArea) %>%
summarise(indians=sum(Country=="India"),na.rm=TRUE) %>%
arrange(-indians)
nindia
nbrazil<-CPS %>%
group_by(MetroArea) %>%
summarise(brazils=sum(Country=="Brazil"),na.rm=TRUE) %>%
arrange(-brazils)
nbrazil
nsomalia<-CPS %>%
group_by(MetroArea) %>%
summarise(somalians=sum(Country=="Somalia"),na.rm=TRUE) %>%
arrange(-somalians)
nsomalia
nindia<-CPS %>%
group_by(MetroArea) %>%
summarise(indians=sum(Country=="India",na.rm=TRUE)) %>%
arrange(-indians)
nindia
nindia<-CPS %>%
group_by(MetroArea) %>%
summarise(indians=sum(Country=="India",na.rm=TRUE)) %>%
arrange(-indians)
nindia
nbrazil<-CPS %>%
group_by(MetroArea) %>%
summarise(brazils=sum(Country=="Brazil",na.rm=TRUE)) %>%
arrange(-brazils)
nbrazil
nsomalia<-CPS %>%
group_by(MetroArea) %>%
summarise(somalians=sum(Country=="Somalia",na.rm=TRUE)) %>%
arrange(-somalians)
nsomalia
if(!file.exists("data")){
dir.create("data")
}
# download data if not yet already done so
if(!file.exists("./data/mvtWeek1.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://courses.edx.org/asset-v1:MITx+15.071x_2a+2T2015+type@asset+block/mvtWeek1.csv"
download.file(fileURL,destfile="./data/mvtWeek1.csv")
#include date of download
}
mvt<-read.csv("./data/mvtWeek1.csv",stringsAsFactors=FALSE)
nrow(mvt)
str(mvt)
max(mvt$ID)
min(mvt$Beat)
count(mvt$LocationDescription="ALLEY")
count(mvt$LocationDescription=="ALLEY")
nrow(filter(mvt$LocationDescription=="ALLEY"))
str(mvt$description=="ALLEY")
str(mvt$LocationDescription=="ALLEY")
sum(mvt$LocationDescription=="ALLEY")
sum(mvt$Arrest=TRUE)
sum(mvt$Arrest==TRUE)
str(mvt)
mvt$month<-mdy_hm(mvt$Date)
library(lubridate)
mvt$month<-mdy_hm(mvt$Date)
head(mvt)
mvt$month<-mdy_hm(mvt$Date)$month
str(mvt)
mvt$month<-as.POSIXlt(mdy_hm(mvt$Date))
str(mvt)
mvt$month<-as.POSIXlt(mdy_hm(mvt$Date))$month
str(mvt)
mvt$month<-as.POSIXlt(mdy_hm(mvt$Date))
str(mvt)
POSIXlt
?POSIXlt
mvt$month<-as.POSIXlt(mdy_hm(mvt$Date))$mon
str(mvt)
mvt$month<-as.POSIXlt(mdy_hm(mvt$Date))$mon+1
str(mvt)
mvt$month<-as.POSIXlt(mdy_hm(mvt$Date))$mon+1
gtamax<-mvt %>%
group_by(month) %>%
count(Arrest=="TRUE") %>%
arrange(-n)
gtamax
gtamax<-mvt %>%
group_by(month) %>%
filter(Arrest=="TRUE") %>%
arrange(-n)
gtamax
gtamax<-mvt %>%
group_by(month) %>%
count(Arrest=="TRUE")
gtamax
str(mvt)
gtamax<-mvt %>%
group_by(month) %>%
count(Arrest==TRUE) #%>%
gtamax
gtamax<-mvt %>%
group_by(month) #%>%
gtamax
gtamax<-mvt %>%
group_by(month) #%>%
count(month, Arrest==TRUE)
gtamax<-mvt %>%
group_by(month) #%>%
count(month & Arrest==TRUE) #%>%
gtamax<-mvt %>%
group_by(month) %>%
count(Arrest==TRUE)
gtamax
gtamax<-mvt %>%
group_by(month) %>%
(Arrest==TRUE) #%>%
gtamax<-mvt %>%
group_by(month) %>%
filter(Arrest==TRUE)
gtamax
gtamax<-mvt %>%
filter(Arrest==TRUE) %>%
group_by(month) %>%
arrange(-n)
gtamax<-mvt %>%
filter(Arrest==TRUE) %>%
group_by(month) %>%
gtamax
gtamax
gtamax<-mvt %>%
filter(Arrest==TRUE) %>%
group_by(month) %>%
count(month) %>%
arrange(-n)
gtamax
hist(mvt$Date, breaks=100)
str(mvt)
mvt$date<-as.Date(mvt$Date)
mvt$date<-mdy_hs(mvt$Date)
mvt$date<-mdy_hm(mvt$Date)
hist(mvt$Date, breaks=100)
str(mvt)
mvt$date<-mdy_hm(mvt$Date)
mvt$data<-as.POSIXct(mvt$Date)
mvt$date<-as.POSIXct(mvt$Date)
mvt$Date<-as.POSIXct(mvt$Date)
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))
median(DateConvert)
mvt$Month = months(DateConvert)
mvt$Weekday = weekdays(DateConvert)
table(mvt)
table(mvt$Month)
sort(table(mvt$Month)
)
mvt$Month = months(DateConvert)
mvt$Weekday = weekdays(DateConvert)
sort(table(mvt$Month))
sort(table(mvt$Weekday))
hist(mvt$Date, breaks=100)
hist(mvt$DateConvert, breaks=100)
hist(mvt$DateConvert)
hist(mvt$Date)
plot(mvt$Date)
hist(ID)
hist(mvt$ID)
hist(as.numeric(mvt$Date))
